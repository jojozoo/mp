<div class="thumb-scroll_wrap">
	<a class="thumb-prev-link" href="javascript:void(0);"></a>
	<div class="hidden-thumbs">
		<ul style="width: <%= 75 * @photos.length %>px; left: 0px;">
			<% @photos.each do |p| %>
			<li class="browser <%= 'active' if @photo.id.eql?(p.id) %>">
				<%#= link_to image_tag(p.picture(:small), size: '70x70'), photo_path(p, request.query_parameters) %>
				<%= link_to image_tag(p.picture(:small), size: '70x70'), photo_path(p, sid: params[:sid], sn: params[:sn]) %>
			</li>
			<% end %>
			<!-- <li class="browser no-photo">
				<span>thumb</span>
			</li> -->
		</ul>
	</div>
	<a class="thumb-next-link" href="javascript:void(0);"></a>
</div>

<script type="text/javascript">
		$(function() {
			//获取焦点图的宽度（显示面积）
			var lithumbswidth = $(".hidden-thumbs li").width() + 5;
			var len = $(".hidden-thumbs li").length; //获取焦点图个数

			/*
			 * index: 当前所在三张图片中最左侧图片位置 - 1 ;
			 */
			var index = $(".hidden-thumbs li").index($(".hidden-thumbs li.active"));
			index += 1;
			
			if (len > 5 && index > 3){
				photo_scorll(index, false, "");
			}
			
			$(".thumb-prev-link").click(function() {
				var vec = "";

				if(index > 7){
					index -= 5;
				}else if (index == 7){
					index -= 4;
				}else if (index == 6){
					index -= 3;
				}else if (index == 5){
					index -= 2;
				}else if (index == 4){
					index -= 1;
				}else{
					vec = "leftend";
				}

				photo_scorll(index,true,vec);
			});

			$(".thumb-next-link").click(function() {
				var vec = "";

				if(index < len - 6){
					index += 5;
				}else if (index == len - 6){
					index += 4;
				}else if (index == len - 5){
					index += 3;
				}else if (index == len - 4){
					index += 2;
				}else if (index == len - 3){
					index += 1;
				}else if (index == len - 2){
					vec = "rightend";
				}

				photo_scorll(index,true,vec);
			});
			
			//本例为左右滚动，即所有li元素都是在同一排向左浮动，所以这里需要计算出外围ul元素的宽度
			$(".hidden-thumbs ul").css("width", lithumbswidth * (len));

			//显示图片函数，根据接收的index值显示相应的内容
			function photo_scorll(index, animate, vec) { //普通切换
				var nowLeft = - (index-3) * lithumbswidth; //根据index值计算ul元素的left值

				var $hidden_thumbs_ul = $(".hidden-thumbs ul");
				if(animate == true){
					if(vec == "leftend"){
						$hidden_thumbs_ul.stop(true, false).animate({"left": 30 + "px"}, 50).animate({"left":0}, 300);
					}else if (vec == "rightend"){
						$hidden_thumbs_ul.stop(true, false).animate({"left":nowLeft - 30 + "px"},50).animate({"left":nowLeft},300);
					}else {
						$hidden_thumbs_ul.stop(true, false).animate({"left": nowLeft},500);
						// 通过animate()调整ul元素滚动到计算出的position
					}
				}else{
					$hidden_thumbs_ul.stop(true, false).css({"left": nowLeft});
				}
			}
		});
	</script>